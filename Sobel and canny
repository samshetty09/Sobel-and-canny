1)sobel edge detection 
import cv2
import matplotlib.pyplot as plt
# Load image in grayscale
image = cv2.imread('F:/ODDSEM/OSTT/photo.jpeg', cv2.IMREAD_GRAYSCALE)
# Sobel edge detection
sobel_x = cv2.Sobel(image, cv2.CV_64F, 1, 0, ksize=5) # Edges in x direction
sobel_y = cv2.Sobel(image, cv2.CV_64F, 0, 1, ksize=5) # Edges in y direction
# Combine both x and y edges
sobel_combined = cv2.magnitude(sobel_x, sobel_y)
# Display the results
plt.figure(figsize=(10, 5))
plt.subplot(1, 3, 1)
plt.imshow(image, cmap='gray')
plt.title('Original Image')
plt.axis('off')
plt.subplot(1, 3, 2)
plt.imshow(sobel_x, cmap='gray')
plt.title('Sobel X (Vertical Edges)')
plt.axis('off')
plt.subplot(1, 3, 3)
plt.imshow(sobel_combined, cmap='gray')
plt.title('Sobel Combined (Edges)')
plt.axis('off')
plt.show()

2)canny edge detection 
import cv2
import matplotlib.pyplot as plt
# Load image in grayscale
image = cv2.imread('F:/ODDSEM/OSTT/photo.jpeg', cv2.IMREAD_GRAYSCALE)
# Apply Canny edge detection
canny_edges = cv2.Canny(image, 100, 200)
# Display Canny result
plt.figure(figsize=(10, 5))
plt.subplot(1, 2, 1)
plt.imshow(image, cmap='gray')
plt.title('Original Image')
plt.axis('off')
plt.subplot(1, 2, 2)
plt.imshow(canny_edges, cmap='gray')
plt.title('Canny Edge Detection')
plt.axis('off')
plt.show()
